apiVersion: apps/v1
kind: Deployment
metadata:
  name: hlf-rest-client
  labels:
    app: hlf-rest-client
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: hlf-rest-client
  template:
    metadata:
      labels:
        app: hlf-rest-client
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-inject-status: "update"
      {{- range .Values.connectionProfiles }}
        vault.hashicorp.com/secret-volume-path-{{ .networkName}}_users.txt: "/usr/local/config/wallet/{{ .networkName}}"
        vault.hashicorp.com/agent-inject-secret-{{ .networkName}}_users.txt: "config/wbp/platform/dev/wbp_demo_network/components/hlf-rest/fabric/wallet"
        vault.hashicorp.com/agent-inject-template-{{ .networkName}}_users.txt: |
          {{`{{ with secret "config/wbp/platform/dev/wbp_demo_network/components/hlf-rest/fabric/wallet"}}
          {{ range $key, $value := .Data.data }}
          {{$key}}|{{$value}}
          {{end}}
          {{ end }}`}}
        vault.hashicorp.com/agent-inject-command-{{ .networkName}}_users.txt: |
          /bin/sh -c "awk NF /usr/local/config/wallet/{{ .networkName}}/users.txt | while IFS='|' read -r key val
           do
             echo $val > /usr/local/config/wallet/{{ .networkName}}/$key
           done"
        #mapping Orderer ca certificate from vault to hlf-rest-client
        vault.hashicorp.com/secret-volume-path-{{ .networkName}}_orderer.crt : "{{ .ordererCAPath }}"
        vault.hashicorp.com/agent-inject-secret-{{ .networkName}}_orderer.crt: "config/wbp/platform/dev/wbp_demo_network/components/hlf-rest/fabric/orderer"
        vault.hashicorp.com/agent-inject-template-{{ .networkName}}_orderer.crt: |
          {{`{{ with secret "config/wbp/platform/dev/wbp_demo_network/components/hlf-rest/fabric/orderer"}}
          {{ range $key, $value := .Data.data }}
          {{$value}}
          {{end}}
          {{ end }}`}}
        vault.hashicorp.com/agent-inject-command-{{ .networkName}}_orderer.crt: |
          /bin/sh -c "awk NF {{ .ordererCAPath }}/{{ .networkName}}_orderer.crt >  {{ .ordererCAPath }}/ca.crt"

        #mapping Peer ca certificate from vault to hlf-rest-client
        vault.hashicorp.com/secret-volume-path-{{ .networkName}}_peer.crt : "{{ .peerCAPath }}"
        vault.hashicorp.com/agent-inject-secret-{{ .networkName}}_peer.crt: "config/wbp/platform/dev/wbp_demo_network/components/hlf-rest/fabric/peerOrg"
        vault.hashicorp.com/agent-inject-template-{{ .networkName}}_peer.crt: |
          {{`{{ with secret "config/wbp/platform/dev/wbp_demo_network/components/hlf-rest/fabric/peerOrg"}}
          {{ range $key, $value := .Data.data }}
          {{$value}}
          {{end}}
          {{ end }} `}}
        vault.hashicorp.com/agent-inject-command-{{ .networkName}}_peer.crt: |
          /bin/sh -c "awk NF {{ .peerCAPath }}/{{ .networkName}}_peer.crt >  {{ .peerCAPath }}/ca.crt"

        {{- end }}

        vault.hashicorp.com/role: {{ .Values.vaultRole | quote}}
#      labels:
#        {{- include "hlf-rest-client.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "hlf-rest-client.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: connection-profile-volume
          configMap:
            name: connection-profile-config
            defaultMode: 0744
        - name: config-data
          emptyDir:
            medium: Memory

      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: connection-profile-volume
              mountPath: /usr/local/config/
          env:
          {{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value | quote}}
          {{- end }}
#      initContainers:
#        - name:  setup-config
#          image: busybox
#          imagePullPolicy: "IfNotPresent"
#          command:
#            - sh
#            - "-c"
#            - |
#              ls /usr/local/config
#          volumeMounts:
#            - name: connection-profile-volume
#              mountPath: /usr/local/config

#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
